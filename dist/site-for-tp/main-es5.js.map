{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authguard.guard.ts","webpack:///src/app/dashboard/articles-dashboard/articles-dashboard.component.ts","webpack:///src/app/dashboard/articles-dashboard/articles-dashboard.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/home-dashboard/home-dashboard.component.ts","webpack:///src/app/dashboard/home-dashboard/home-dashboard.component.html","webpack:///src/app/dashboard/investors-dashboard/investors-dashboard.component.ts","webpack:///src/app/dashboard/investors-dashboard/investors-dashboard.component.html","webpack:///src/app/dashboard/klaster-dashboard/klaster-dashboard.component.ts","webpack:///src/app/dashboard/klaster-dashboard/klaster-dashboard.component.html","webpack:///src/app/dashboard/services-dashboard/services-dashboard.component.ts","webpack:///src/app/dashboard/services-dashboard/services-dashboard.component.html","webpack:///src/app/data/article.ts","webpack:///src/app/data/service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/app/shared/service/atricle.service.ts","webpack:///src/app/shared/service/investors.service.ts","webpack:///src/app/shared/service/klaster.service.ts","webpack:///src/app/shared/service/services.service.ts","webpack:///src/app/shared/service/user.service.ts","webpack:///src/app/web/articles/articles.component.ts","webpack:///src/app/web/articles/articles.component.html","webpack:///src/app/web/articles/page/page.component.ts","webpack:///src/app/web/articles/page/page.component.html","webpack:///src/app/web/footer/footer.component.ts","webpack:///src/app/web/footer/footer.component.html","webpack:///src/app/web/header/header.component.ts","webpack:///src/app/web/header/header.component.html","webpack:///src/app/web/home/home.component.ts","webpack:///src/app/web/home/home.component.html","webpack:///src/app/web/klaster/klaster.component.ts","webpack:///src/app/web/klaster/klaster.component.html","webpack:///src/app/web/residents/residents.component.ts","webpack:///src/app/web/residents/residents.component.html","webpack:///src/app/web/services/service-page/service-page.component.ts","webpack:///src/app/web/services/service-page/service-page.component.html","webpack:///src/app/web/services/services.component.ts","webpack:///src/app/web/services/services.component.html","webpack:///src/app/web/web.component.ts","webpack:///src/app/web/web.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","positionClass","declarations","providers","bootstrap","AuthguardGuard","user","router","username","password","next","state","setUserLoggedIn","navigate","console","log","getUserLoggedIn","ArticlesDashboardComponent","cdRef","service","toastr","form","imageFile","imageDef","createForm","getArticles","detectChanges","articleForm","group","heading","required","description","shortDescription","urlImage","subscribe","articles","error","errorMessage","delArticle","res","article","event","target","files","reader","FileReader","onload","result","readAsDataURL","img","FormData","imageName","append","name","addArticle","push","success","reset","onSelectedFile","DashboardComponent","dashboard","home","logaut","linkList","link","HomeDashboardComponent","InvestorsDashboardComponent","headElements","getInvestors","getInvestor","investors","investorForm","urlToInv","delInvestor","dir","addInvestor","investor","KlasterDashboardComponent","getKlaster","klaster","klasterForm","addKlaster","delKlaster","ServicesDashboardComponent","serviceForService","ctreateForm","getServices","serviceForm","services","delService","addService","Article","Service","LoginComponent","auth","authForm","login","pass","pas","LogIn","NotFoundComponent","ArticleService","http","uri","get","pipe","uri_img","headers","obj","date","Date","now","post","providedIn","InvestorsService","KlasterService","ServicesService","imgUrl","UserService","isUserLoggedIn","ArticlesComponent","PageComponent","route","location","getArticle","snapshot","paramMap","back","FooterComponent","HeaderComponent","HomeComponent","getArticlesLast","KlasterComponent","ResidentsComponent","ServicePageComponent","getService","ServicesComponent","WebComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WebComponent } from './web/web.component';\nimport { HomeComponent } from './web/home/home.component';\nimport { ArticlesComponent } from './web/articles/articles.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HomeDashboardComponent } from './dashboard/home-dashboard/home-dashboard.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ArticlesDashboardComponent } from './dashboard/articles-dashboard/articles-dashboard.component';\nimport { PageComponent } from './web/articles/page/page.component';\nimport { ResidentsComponent } from './web/residents/residents.component';\nimport { ServicesComponent } from './web/services/services.component';\nimport { ServicesDashboardComponent } from './dashboard/services-dashboard/services-dashboard.component';\nimport { ServicePageComponent } from './web/services/service-page/service-page.component';\nimport { AuthguardGuard } from './authguard.guard';\nimport { LoginComponent } from './login/login.component';\nimport { KlasterDashboardComponent } from './dashboard/klaster-dashboard/klaster-dashboard.component';\nimport { InvestorsDashboardComponent } from './dashboard/investors-dashboard/investors-dashboard.component';\nimport { KlasterComponent } from './web/klaster/klaster.component';\n\n\nconst routes: Routes = [\n  { path: '',           component: WebComponent, children: [\n    { path: '',                 component: HomeComponent                },\n    { path: 'articles',         component: ArticlesComponent            },\n    { path: 'articles/:id',     component: PageComponent                },\n    { path: 'residents',        component: ResidentsComponent           },\n    { path: 'services',         component: ServicesComponent            },\n    { path: 'services/:id',     component: ServicePageComponent         },\n    { path: 'klaster',          component: KlasterComponent             }\n  ]},\n  { path: 'dashboard',  component: DashboardComponent, canActivate: [AuthguardGuard], children: [\n    { path: '', redirectTo: 'articles', pathMatch: 'full' },\n    { path: 'articles',         component: ArticlesDashboardComponent   },\n    { path: 'services',         component: ServicesDashboardComponent   },\n    { path: 'klaster',          component: KlasterDashboardComponent    },\n    { path: 'investors',        component: InvestorsDashboardComponent  }\n  ]},\n  { path: 'login',      component: LoginComponent             },\n  { path: 'not-found',  component: NotFoundComponent          },\n  { path: '**', redirectTo: 'not-found', pathMatch: 'full'    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'site-for-tp';\n}\n","<router-outlet class=\"contaner-fluid\"></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\n\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\nimport { EditorModule } from '@tinymce/tinymce-angular';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WebComponent } from './web/web.component';\nimport { HomeComponent } from './web/home/home.component';\nimport { ArticlesComponent } from './web/articles/articles.component';\nimport { HeaderComponent } from './web/header/header.component';\nimport { FooterComponent } from './web/footer/footer.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HomeDashboardComponent } from './dashboard/home-dashboard/home-dashboard.component';\nimport { ArticlesDashboardComponent } from './dashboard/articles-dashboard/articles-dashboard.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { PageComponent } from './web/articles/page/page.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ResidentsComponent } from './web/residents/residents.component';\nimport { ServicesComponent } from './web/services/services.component';\nimport { ServicesDashboardComponent } from './dashboard/services-dashboard/services-dashboard.component';\nimport { ServicePageComponent } from './web/services/service-page/service-page.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserService } from './shared/service/user.service';\nimport { DataService } from './shared/service/data.service';\nimport { ArticleService } from './shared/service/atricle.service';\nimport { AuthguardGuard } from './authguard.guard';\nimport { KlasterComponent } from './web/klaster/klaster.component';\nimport { KlasterDashboardComponent } from './dashboard/klaster-dashboard/klaster-dashboard.component';\nimport { InvestorsDashboardComponent } from './dashboard/investors-dashboard/investors-dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WebComponent,\n    HomeComponent,\n    ArticlesComponent,\n    HeaderComponent,\n    FooterComponent,\n    DashboardComponent,\n    HomeDashboardComponent,\n    ArticlesDashboardComponent,\n    NotFoundComponent,\n    PageComponent,\n    ResidentsComponent,\n    ServicesComponent,\n    ServicesDashboardComponent,\n    ServicePageComponent,\n    LoginComponent,\n    KlasterComponent,\n    KlasterDashboardComponent,\n    InvestorsDashboardComponent,\n  ],\n  imports: [\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    EditorModule,\n    FroalaEditorModule.forRoot(), \n    FroalaViewModule.forRoot(),\n    MDBBootstrapModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    AuthguardGuard, \n    UserService,\n    ArticleService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from './shared/service/user.service';\r\n\r\n@Injectable()\r\nexport class AuthguardGuard implements CanActivate {\r\n\r\n  public username = '';\r\n  public password = '';\r\n\r\n  constructor(private user: UserService, private router: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot):Observable<boolean> | boolean {\r\n    if (! this.user.setUserLoggedIn(this.username, this.password)) {\r\n      this.router.navigate(['/login']);\r\n    } else {\r\n    }\r\n    console.log('You are not admin');\r\n    return this.user.getUserLoggedIn();\r\n  }\r\n}","import { MdbTablePaginationComponent, MdbTableDirective } from 'angular-bootstrap-md';\n\nimport { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from \"@angular/forms\";\nimport { ToastrService } from 'ngx-toastr';\n\nimport { Article } from 'src/app/data/article';\nimport { ArticleService } from 'src/app/shared/service/atricle.service';\n\n@Component({\n  selector: 'app-articles-dashboard',\n  templateUrl: './articles-dashboard.component.html',\n  styleUrls: ['./articles-dashboard.component.scss']\n})\nexport class ArticlesDashboardComponent implements OnInit, AfterViewInit {\n\n  private errorMessage: string;\n  articles: Article[];\n  article: Article;\n\n  articleForm: FormGroup;\n  editorContent: string;\n  imageFile: File = null;\n  imageDef: string ='../../../assets/img/noimage.png';\n\n  constructor(private cdRef: ChangeDetectorRef, \n              private service: ArticleService, \n              private toastr: ToastrService,\n              private form: FormBuilder) \n    { this.createForm(); }\n\n  ngOnInit() {\n    this.getArticles();\n  }\n\n  ngAfterViewInit() {\n    this.cdRef.detectChanges();\n  }\n\n  createForm() {\n    this.articleForm = this.form.group({\n        heading: ['', Validators.required ],\n        description: [''],\n        shortDescription: ['', Validators.required ],\n        urlImage: [''],\n    });\n}\n\n  getArticles(): void {\n    this.service.getArticles()\n                .subscribe(\n                  articles => this.articles = articles,\n                  error => this.errorMessage = error\n                );\n  }\n\n  // DELETE article\n  delArticle(id:any) {\n    this.service.delArticle(id)\n        .subscribe(\n            res => {\n                this.toastr.error('Статья удалена');\n                this.service.getArticles()\n                    .subscribe(article => this.articles = article)\n            },\n            error => this.errorMessage = error,\n        )\n  }\n\n  // GET uploaded file info\n  onSelectedFile(event) {\n    if (<File>event.target.files[0] != null) {\n        this.imageFile = <File>event.target.files[0];\n    } else {\n        this.imageFile = null;\n    }\n\n    // Image preview\n    const reader = new FileReader();\n    reader.onload = (event:any) => {\n        this.imageDef = event.target.result\n    };\n    reader.readAsDataURL(this.imageFile)\n  }\n\n  // ADD article\n  addArticle(heading, description, shortDescription) {\n    let img = new FormData();\n    let imageName;\n    if (this.imageFile !== null) {\n        img.append('articleImage', this.imageFile, this.imageFile.name);\n        imageName = 'http://localhost:3000/uploads/article/' + this.imageFile.name;\n        this.service.addArticle(heading, description, shortDescription, imageName, img)\n            .subscribe(\n                article => {\n                    this.articles.push(article);\n                    this.toastr.success('Статья добавлена');\n                    this.articleForm.reset();\n                    this.service.getArticles()\n                        .subscribe(articles => this.articles = articles);\n                },\n                error => this.errorMessage = error\n            );\n    } else {\n        this.service.addArticle(heading, description, shortDescription, imageName, img)\n            .subscribe(\n                article => {\n                    this.articles.push(article);\n                    this.toastr.success('Статья добавлена');\n                    this.articleForm.reset();\n                    this.service.getArticles()\n                        .subscribe(articles => this.articles = articles);\n                },\n                error => this.errorMessage = error\n            );\n    }\n}\n\n}\n","  <form class=\"row\" [formGroup]=\"articleForm\" (submit)=\"addArticle(heading.value, editorContent, shortDescription.value)\" novalidate>\n    <div class=\"col-md-8\">\n        <div class=\"form-group col-md-12\">\n            <label>Заголовок</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"heading\" #heading />\n            <div *ngIf=\"articleForm.controls['heading'].invalid && (articleForm.controls['heading'].dirty || articleForm.controls['heading'].touched)\" class=\"alert alert-danger\">\n                <div *ngIf=\"articleForm.controls['heading'].errors.required\">\n                    Необходимо заполнить заголовок!\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <label>Описание</label>\n            <div [froalaEditor] [(froalaModel)]=\"editorContent\"></div>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <label>Короткое описание</label>\n            <textarea type=\"text\" class=\"form-control\" formControlName=\"shortDescription\" rows=\"3\" #shortDescription></textarea>\n            <div *ngIf=\"articleForm.controls['shortDescription'].invalid && (articleForm.controls['shortDescription'].dirty || articleForm.controls['shortDescription'].touched)\" class=\"alert alert-danger\">\n                <div *ngIf=\"articleForm.controls['shortDescription'].errors.required\">\n                    Необходимо заполнить короткое описание!\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <label>Загрузка</label>\n            <input type=\"file\" class=\"form-control\" formControlName=\"urlImage\" accept=\"image/*\" (change)=\"onSelectedFile($event)\"  name=\"articleImage\" #urlImage/>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <button type=\"submit\"  [disabled]=\"articleForm.pristine || articleForm.invalid\" class=\"btn btn-primary\">Добавить</button>\n        </div>\n    </div>\n    <div class=\"col-md-4\">\n        <div class=\"col-md-12 image-container\">\n            <label>Изображение</label>\n            <div class=\"img-preview\">\n                <img [src]=\"imageDef\">\n            </div>\n        </div>\n    </div>\n</form>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-3 col-md-12 mt-2 mb-2\" *ngFor=\"let article of articles\">\n            <mdb-card>\n              <div class=\"view rgba-white-slight waves-light\" mdbWavesEffect>\n                <!-- Card img -->\n                <mdb-card-img src=\"{{article.urlImage}}\" alt=\"Card image cap\"></mdb-card-img> \n                <a>\n                  <div class=\"mask\"></div>\n                </a>\n              </div>\n              <!--Card content-->\n              <mdb-card-body>\n                <!--Title-->\n                <mdb-card-title>\n                  <h4>{{article.heading}}</h4>\n                </mdb-card-title>\n            \n                <!--Text-->\n                <mdb-card-text> \n                  {{article.shortDescription}}\n                </mdb-card-text>\n             \n                <a mdbBtn class=\"button\" (click)=\"delArticle(article._id)\" mdbWavesEffect>Удалить</a>\n              </mdb-card-body>\n            </mdb-card>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  title = 'Технопарк «Полесье»';\n  dashboard = 'Главная панель';\n\n  home = \"\"\n\n  logaut = 'Выйти'\n  \n  linkList = [\n    { link: '/dashboard/articles',        name: 'Статьи'        },\n    { link: '/dashboard/services',        name: 'Услуги'        },\n    { link: '/dashboard/investors',       name: 'Инвесторы'     },\n    { link: '/dashboard/klaster',         name: 'Кластер'       }\n  ]\n\n    constructor( ) {\n     }\n\n    ngOnInit() {\n    }\n\n}\n","<div class=\"s-layout\">\r\n    <!-- Sidebar -->\r\n    <div class=\"s-layout__sidebar\">\r\n      <a class=\"s-sidebar__trigger\" >\r\n         <i class=\"fa fa-bars\"></i>\r\n      </a>\r\n    \r\n      <nav class=\"s-sidebar__nav\">\r\n         <ul>\r\n            <li>\r\n                <a class=\"s-sidebar__nav-link\" routerLinkActive=\"active\" routerLink=\"/dashboard\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n                    <em>Статистика</em>\r\n                </a>\r\n            </li>\r\n            <li *ngFor=\"let item of linkList\">\r\n               <a class=\"s-sidebar__nav-link\" routerLinkActive=\"active\" routerLink=\"{{item.link}}\">\r\n                  <em>{{item.name}}</em>\r\n               </a>\r\n            </li>\r\n            <li>\r\n                <a class=\"s-sidebar__nav-link\" routerLink=\"\">\r\n                    <em>Выйти</em>\r\n                </a>\r\n            </li>\r\n         </ul>\r\n      </nav>\r\n    </div>\r\n    \r\n    <!-- Content -->\r\n    <main class=\"s-layout__content\">\r\n        <div class=\"container-fluid\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </main>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-dashboard',\n  templateUrl: './home-dashboard.component.html',\n  styleUrls: ['./home-dashboard.component.scss']\n})\nexport class HomeDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home-dashboard works!</p>\n","import { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from \"@angular/forms\";\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { Investor } from 'src/app/data/investor';\nimport { InvestorsService } from 'src/app/shared/service/investors.service';\n\n@Component({\n  selector: 'app-investors-dashboard',\n  templateUrl: './investors-dashboard.component.html',\n  styleUrls: ['./investors-dashboard.component.scss']\n})\nexport class InvestorsDashboardComponent implements OnInit {\n\n  headElements = ['Изображение', 'ID', 'Название', 'Ссылка на инвестора', 'Редактировать'];\n\n  investors: Investor[];\n  investor: Investor;\n\n  investorForm: FormGroup;\n  editorContent: string;\n  imageFile: File = null;\n  imageDef: String = '../../../assets/img/noimage.png';\n\n  constructor(\n    private service: InvestorsService,\n    private form: FormBuilder,\n    private toastr: ToastrService\n    ) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.getInvestors();\n  }\n\n  getInvestors(): void {\n    this.service.getInvestor().subscribe(\n      investors => this.investors = investors\n    );\n  }\n\n  createForm(): void {\n    this.investorForm = this.form.group({\n      name: ['', Validators.required ],\n      urlToInv: ['', Validators.required ],\n      urlImage: [''],\n    });\n  }\n\n  //GET uploaded file info\n  onSelectedFile(event): void {\n    if (<File>event.target.files[0] != null) {\n      this.imageFile = <File>event.target.files[0];\n    } else {\n      this.imageFile = null;\n    }\n\n    //SET image preview\n    const reader = new FileReader();\n    reader.onload = (event: any) => {\n      this.imageDef = event.target.result\n    };\n    reader.readAsDataURL(this.imageFile);\n  }\n\n  //DELETE investor by ID\n  delInvestor(id: any): void {\n    this.service.delInvestor(id)\n        .subscribe(\n          res => { \n            this.service.getInvestor()\n              .subscribe( investors => this.investors = investors)\n          }, \n          error => console.dir(error)\n        )\n  }\n\n  //ADD new investor\n  addInvestor(name, urlToInv): void {\n    let img = new FormData();\n    let imageName: String;\n\n    if (this.imageFile !== null) {\n      img.append('investorImage', this.imageFile, this.imageFile.name);\n      imageName = 'http://localhost:3000/uploads/investors/' + this.imageFile.name;\n\n      this.service.addInvestor(name, urlToInv, imageName, img)\n          .subscribe(\n            investor => {\n              this.investors.push(investor);\n              this.toastr.success('Информация добавлена');\n              this.investorForm.reset();\n              this.service.getInvestor()\n                  .subscribe(investors => this.investors = investors);\n            },\n            error => console.dir(error)\n          );\n    } else {\n      this.service.addInvestor(name, urlToInv, imageName, img)\n          .subscribe(\n            investor => {\n              this.investors.push(investor);\n              this.toastr.success('Информация добавлена');\n              this.investorForm.reset();\n              this.service.getInvestor()\n                  .subscribe(investors => this.investors = investors);\n            },\n            error => console.dir(error)\n          );\n    }\n  }\n\n}\n","\n\n<form class=\"row\" [formGroup]=\"investorForm\" (submit)=\"addInvestor(name.value, urlToInv.value)\" novalidate>\n    <div class=\"col-md-8\">\n        <div class=\"form-group col-md-12\">\n            <label>Заголовок</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"name\" #name />\n            <div *ngIf=\"investorForm.controls['name'].invalid && (investorForm.controls['name'].dirty || investorForm.controls['name'].touched)\" class=\"alert alert-danger\">\n                <div *ngIf=\"investorForm.controls['name'].errors.required\">\n                    Необходимо заполнить заголовок!\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <label>Ссылка на инвестора</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"urlToInv\" #urlToInv />\n            <div *ngIf=\"investorForm.controls['urlToInv'].invalid && (investorForm.controls['urlToInv'].dirty || investorForm.controls['urlToInv'].touched)\" class=\"alert alert-danger\">\n                <div *ngIf=\"investorForm.controls['urlToInv'].errors.required\">\n                    Необходимо заполнить заголовок!\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group col-md-12\">\n            <label>Загрузка</label>\n            <input type=\"file\" class=\"form-control\" formControlName=\"urlImage\" accept=\"image/*\" (change)=\"onSelectedFile($event)\"  name=\"investorImage\" #urlImage/>\n        </div>\n\n        <div class=\"form-group col-md-12\">\n            <button type=\"submit\" [disabled]=\"investorForm.pristine || investorForm.invalid\" class=\"btn btn-primary\">Добавить</button>\n        </div>\n    </div>\n    \n    <div class=\"col-md-4\">\n        <div class=\"col-md-12 image-container\">\n            <label>Изображение</label>\n            <div class=\"img-preview\">\n                <img [src]=\"imageDef\">\n            </div>\n        </div>\n    </div>\n</form>\n\n<div class=\"container-fluid\">\n    <table mdbTable>\n        <thead>\n          <tr>\n            <th *ngFor=\"let head of headElements\" scope=\"col\">{{head}} </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr mdbTableCol *ngFor=\"let item of investors\">\n            <th scope=\"row\"><img style=\"width: 200px;\" src=\"{{item.urlImage}}\" alt=\"{{item.name}}\"></th>\n            <td>{{item._id}}</td>\n            <td>{{item.name}}</td>\n            <td>{{item.urlToInv}}</td>\n            <td><a mdbBtn class=\"button\" (click)=\"delInvestor(item._id)\" mdbWavesEffect>Удалить</a></td>\n          </tr>\n        </tbody>\n      </table>\n</div>","import { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from \"@angular/forms\";\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { Klaster } from '../../data/klaster';\nimport { KlasterService } from 'src/app/shared/service/klaster.service';\n\n@Component({\n  selector: 'app-klaster-dashboard',\n  templateUrl: './klaster-dashboard.component.html',\n  styleUrls: ['./klaster-dashboard.component.scss']\n})\nexport class KlasterDashboardComponent implements OnInit {\n\n  klaster: Klaster;\n\n  klasterForm: FormGroup;\n  editorContent: string;\n  imageFile: File = null;\n  imageDef: String = '../../../assets/img/noimage.png';\n\n  constructor(\n    private service: KlasterService,\n    private form: FormBuilder,\n    private toastr: ToastrService\n  ) { this.createForm(); }\n\n  ngOnInit(): void {\n    this.getKlaster();\n  }\n\n  getKlaster() {\n    this.service.getKlaster().subscribe(\n      klaster => this.klaster = klaster,\n      error => console.dir(error));\n  }\n\n  createForm(): void {\n    this.klasterForm = this.form.group({\n      name: ['', Validators.required ],\n      description: ['']\n    });\n  }\n\n  //ADD klaster\n  addKlaster(name, description): void {\n    this.service.addKlaster(name, description)\n          .subscribe(\n            klaster => {\n              this.klaster = klaster;\n              this.toastr.success('Информация добавлена');\n              this.klasterForm.reset();\n              this.service.getKlaster()\n                  .subscribe(klaster => this.klaster = klaster);\n            },\n            error => console.dir(error)\n          );\n  }\n\n  //DELETE klaster by ID\n  delKlaster(id: any): void {\n    this.service.delKlaster(id)\n        .subscribe(\n          res => {\n            this.service.getKlaster()\n              .subscribe(klaster => this.klaster = klaster)\n          },\n          error => console.dir(error)\n        )\n  }\n\n}\n","<form class=\"row\" [formGroup]=\"klasterForm\" (submit)=\"addKlaster(name.value, editorContent)\" novalidate>\n    <div class=\"col-md-12\">\n        <div class=\"form-group col-md-12\">\n            <label>Заголовок</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"name\" #name />\n            <div *ngIf=\"klasterForm.controls['name'].invalid && (klasterForm.controls['name'].dirty || klasterForm.controls['name'].touched)\" class=\"alert alert-danger\">\n                <div *ngIf=\"klasterForm.controls['name'].errors.required\">\n                    Необходимо заполнить заголовок!\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <label>Содержание</label>\n            <div [froalaEditor] [(froalaModel)]=\"editorContent\"></div>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <button type=\"submit\"  [disabled]=\"klasterForm.pristine || klasterForm.invalid\" class=\"btn btn-primary\">Добавить</button>\n        </div>\n    </div>\n</form>\n\n<div class=\"container-fluid\">\n    <div class=\"row\" *ngIf=\"klaster\">\n        <div class=\"col-12\">\n            <h3>{{klaster.name}}</h3>\n            <span>{{klaster.date | date:'dd.MM.yy HH:mm'}}</span>\n            <div [froalaView]=\"klaster.description\"></div>\n            <a mdbBtn class=\"button\" (click)=\"delKlaster(klaster._id)\" mdbWavesEffect>Удалить</a>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild, HostListener, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from \"@angular/forms\";\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { Service } from 'src/app/data/service';\nimport { ServicesService } from 'src/app/shared/service/services.service';\n\n@Component({\n  selector: 'app-services-dashboard',\n  templateUrl: './services-dashboard.component.html',\n  styleUrls: ['./services-dashboard.component.scss']\n})\nexport class ServicesDashboardComponent implements OnInit {\n  \n  services: Service[];\n  service: Service;\n\n  serviceForm: FormGroup;\n  editorContent: string;\n  imageFile: File = null;\n  imageDef: String = '../../../assets/img/noimage.png';\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private serviceForService: ServicesService,\n    private toastr: ToastrService,\n    private form: FormBuilder\n    ) { this.ctreateForm(); }\n\n  ngOnInit(): void {\n    this.getServices();\n  }\n\n  ctreateForm(): void {\n    this.serviceForm = this.form.group({\n      heading: ['', Validators.required ],\n      description: [''],\n      shortDescription: ['', Validators.required ],\n      urlImage: [''],\n    });\n  }\n\n  getServices(): void {\n    this.serviceForService.getServices().subscribe(\n      services => this.services = services,\n      error => console.dir(error)\n    );\n  }\n\n  // DELETE article\n  delService(id:any) {\n    this.serviceForService.delService(id)\n        .subscribe(\n            res => {\n                this.serviceForService.getServices()\n                    .subscribe(services => this.services = services)\n            },\n            error => console.dir(error),\n        )\n  }\n\n  // GET uploaded file info\n  onSelectedFile(event) {\n    if (<File>event.target.files[0] != null) {\n        this.imageFile = <File>event.target.files[0];\n    } else {\n        this.imageFile = null;\n    }\n\n    // Image preview\n    const reader = new FileReader();\n    reader.onload = (event:any) => {\n        this.imageDef = event.target.result\n    };\n    reader.readAsDataURL(this.imageFile)\n  }\n\n  // ADD service\n  addService(heading, description, shortDescription) {\n    let img = new FormData();\n    let imageName;\n    if (this.imageFile !== null) {\n        img.append('serviceImage', this.imageFile, this.imageFile.name);\n        imageName = 'http://localhost:3000/uploads/service/' + this.imageFile.name;\n        this.serviceForService.addService(heading, description, shortDescription, imageName, img)\n            .subscribe(\n                service => {\n                    this.services.push(service);\n                    this.toastr.success('Статья добавлена');\n                    this.serviceForm.reset();\n                    this.serviceForService.getServices()\n                        .subscribe(services => this.services = services);\n                },\n                error => console.dir(error),\n            );\n    } else {\n        this.serviceForService.addService(heading, description, shortDescription, imageName, img)\n            .subscribe(\n              service => {\n                    this.services.push(service);\n                    this.toastr.success('Статья добавлена');\n                    this.serviceForm.reset();\n                    this.serviceForService.getServices()\n                        .subscribe(services => this.services = services);\n                },\n                error => console.dir(error),\n            );\n    }\n  }\n\n}\n","\n\n<form class=\"row\" [formGroup]=\"serviceForm\" (submit)=\"addService(heading.value, editorContent, shortDescription.value)\" novalidate>\n    <div class=\"col-md-8\">\n        <div class=\"form-group col-md-12\">\n            <label>Заголовок</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"heading\" #heading />\n            <div *ngIf=\"serviceForm.controls['heading'].invalid && (serviceForm.controls['heading'].dirty || serviceForm.controls['heading'].touched)\" class=\"alert alert-danger\">\n                <div *ngIf=\"serviceForm.controls['heading'].errors.required\">\n                    Необходимо заполнить заголовок!\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <label>Описание</label>\n            <div [froalaEditor] [(froalaModel)]=\"editorContent\"></div>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <label>Короткое описание</label>\n            <textarea type=\"text\" class=\"form-control\" formControlName=\"shortDescription\" rows=\"3\" #shortDescription></textarea>\n            <div *ngIf=\"serviceForm.controls['shortDescription'].invalid && (serviceForm.controls['shortDescription'].dirty || serviceForm.controls['shortDescription'].touched)\" class=\"alert alert-danger\">\n                <div *ngIf=\"serviceForm.controls['shortDescription'].errors.required\">\n                    Необходимо заполнить короткое описание!\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <label>Загрузка</label>\n            <input type=\"file\" class=\"form-control\" formControlName=\"urlImage\" accept=\"image/*\" (change)=\"onSelectedFile($event)\"  name=\"serviceImage\" #urlImage/>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <button type=\"submit\"  [disabled]=\"serviceForm.pristine || serviceForm.invalid\" class=\"btn btn-primary\">Добавить</button>\n        </div>\n    </div>\n    <div class=\"col-md-4\">\n        <div class=\"col-md-12 image-container\">\n            <label>Изображение</label>\n            <div class=\"img-preview\">\n                <img [src]=\"imageDef\">\n            </div>\n        </div>\n    </div>\n</form>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <div *ngFor=\"let item of services\" class=\"col-3\">\n            <mdb-card>\n                <div class=\"view rgba-white-slight waves-light\" mdbWavesEffect>\n                  <!-- Card img -->\n                  <mdb-card-img src=\"{{item.imgUrl}}\" alt=\"Card image cap\"></mdb-card-img> \n                  <a>\n                    <div class=\"mask\"></div>\n                  </a>\n                </div>\n                <!--Card content-->\n                <mdb-card-body>\n                  <!--Title-->\n                  <mdb-card-title>\n                    <h4>{{item.heading}}</h4>\n                  </mdb-card-title>\n              \n                  <!--Text-->\n                  <mdb-card-text> \n                    {{item.shortDescription}}\n                  </mdb-card-text>\n              \n                  <a mdbBtn class=\"button\" (click)=\"delService(item._id)\" mdbWavesEffect>Удалить</a>\n                </mdb-card-body>\n              </mdb-card>\n        </div>\n    </div>\n</div>","export class Article {\r\n    _id: string;\r\n    heading: string;\r\n    description: string;\r\n    shortDescription: string;\r\n    urlImage: string;\r\n    date: string;\r\n}","export class Service {\r\n    _id: String;\r\n    imgUrl: String;\r\n    heading: String;\r\n    shortDescription: String;\r\n    description: String;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from \"@angular/forms\";\nimport { promise } from \"selenium-webdriver\";\nimport {ToastrService} from \"ngx-toastr\";\nimport { AuthguardGuard } from '../authguard.guard';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\n\nexport class LoginComponent implements OnInit {\n\n  public authForm: FormGroup;\n  public login: string;\n  public pass: string;\n\n  constructor(private form: FormBuilder, private toastr: ToastrService, private auth: AuthguardGuard) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  createForm() {\n    this.authForm = this.form.group({\n      login: ['', Validators.required ],\n      pass: ['', Validators.required ]\n    });\n  }\n\n  public LogIn(event: Event, log, pas) {\n    console.log(this.authForm);\n    this.login = log;\n    this.pass = pas;\n    this.auth.username = this.login;\n    this.auth.password = this.pass;\n    this.auth.canActivate(null, null);\n  }\n\n}","<div class=\"container\">\n    <!-- Default form login -->\n    <form [formGroup]=\"authForm\" class=\"text-center border border-light p-5\">\n\n        <p class=\"h4 mb-4\">Sign in</p>\n    \n        <!-- Email -->\n        <input type=\"email\" id=\"defaultLoginFormEmail\" class=\"form-control mb-4\" placeholder=\"E-mail\" formControlName=\"login\">\n    \n        <!-- Password -->\n        <input type=\"password\" id=\"defaultLoginFormPassword\" class=\"form-control mb-4\" placeholder=\"Password\" formControlName=\"pass\">\n    \n        <!-- Sign in button -->\n        <button mdbBtn color=\"info\" block=\"true\" class=\"my-4\" type=\"submit\" (click)=\"LogIn($event, authForm.value.login, authForm.value.pass)\" routerLink=\"/dashboard\">Sign in</button>\n    \n  </form>\n  <!-- Default form login -->\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <img class=\"img-fluid\" src=\"./assets/img/not-found.png\" alt=\"Даже пичка на этой страничке не захотела работать, но ты всегда можешь нажать на кнопу ниже :3\">\n        </div>\n        <div class=\"col-12 text-center\">\n            <button mdbBtn type=\"button\" class=\"button\" routerLink=\"\" mdbWavesEffect>НА ГЛАВНУЮ!</button>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { Article } from '../../data/article';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticleService {\n\n    constructor(private http: HttpClient) { }\n\n    // GET articles\n    getArticles(): Observable<Article[]> {\n        const uri = 'http://localhost:3000/data/articles';\n        return this\n            .http\n            .get<Article[]>(uri)\n            .pipe(map(res => {\n              return res;\n            }));\n    }\n\n    // GET article\n    getArticle(id:any): Observable<Article> {\n        const uri = 'http://localhost:3000/data/articles/get-one/' + id;\n        return this\n            .http\n            .get<Article>(uri)\n            .pipe(map(res => {\n              return res;\n            }));\n    }\n\n    getArticlesLast(): Observable<Article[]> {\n        const uri = 'http://localhost:3000/data/articles/last';\n        return this\n            .http\n            .get<Article[]>(uri)\n            .pipe(map(res => {\n              return res;\n            }));\n    }\n\n    // ADD article\n    addArticle(heading, description, shortDescription, imageName, img): Observable<Article> {\n        const uri = 'http://localhost:3000/data/articles/add';\n        const uri_img = 'http://localhost:3000/data/articles/upload';\n        const headers = new HttpHeaders();\n        const obj = {\n            heading: heading,\n            description: description,\n            shortDescription: shortDescription,\n            urlImage: imageName,\n            date: Date.now()\n        };\n        this.http\n            .post(uri_img, img)\n            .subscribe(res =>\n                console.log(res));\n        return this.http\n            .post<Article>(uri, obj,{headers:headers})\n            .pipe(map(res => {\n              return res;\n            }))\n    }\n\n    // DELETE article\n    delArticle(id:any) {\n        const uri = 'http://localhost:3000/data/articles/delete/' + id;\n        return this\n            .http\n            .get(uri)\n            .pipe(map(res => {\n                return res;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { Investor } from '../../data/investor';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvestorsService {\n\n  constructor(private http: HttpClient) { }\n\n  // GET Investors\n  getInvestor(): Observable<Investor[]> {\n    const uri = 'http://localhost:3000/data/investors';\n    return this\n        .http\n        .get<Investor[]>(uri)\n        .pipe(map(res => {\n          return res;\n        }));\n}\n\n// ADD Investors\naddInvestor(name, urlToInv, imageName, img): Observable<Investor> {\n    const uri = 'http://localhost:3000/data/investors/add';\n    const uri_img = 'http://localhost:3000/data/investors/upload';\n    const headers = new HttpHeaders();\n    const obj = {\n        name: name,\n        urlImage: imageName,\n        urlToInv: urlToInv\n    };\n    this.http\n        .post(uri_img, img)\n        .subscribe(res =>\n            console.log(res));\n    return this.http\n        .post<Investor>(uri, obj,{headers:headers})\n        .pipe(map(res => {\n          return res;\n        }))\n}\n\n// DELETE Investors\ndelInvestor(id:any) {\n    const uri = 'http://localhost:3000/data/investors/delete/' + id;\n    return this\n        .http\n        .get(uri)\n        .pipe(map(res => {\n            return res;\n        }));\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { Klaster } from '../../data/klaster';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KlasterService {\n\n  constructor(private http: HttpClient) { }\n\n  // GET Klaster\n  getKlaster(): Observable<Klaster> {\n    const uri = 'http://localhost:3000/data/klaster';\n    return this\n        .http\n        .get<Klaster>(uri)\n        .pipe(map(res => {\n          return res;\n        }));\n}\n\n// ADD Klaster\naddKlaster(name, description): Observable<Klaster> {\n    const uri = 'http://localhost:3000/data/klaster/add';\n    const headers = new HttpHeaders();\n    const obj = {\n        name: name,\n        description: description,\n        date: Date.now()\n    };\n    return this.http\n        .post<Klaster>(uri, obj,{headers:headers})\n        .pipe(map(res => {\n          return res;\n        }))\n}\n\n// DELETE Klaster\ndelKlaster(id:any) {\n    const uri = 'http://localhost:3000/data/klaster/delete/' + id;\n    return this\n        .http\n        .get(uri)\n        .pipe(map(res => {\n            return res;\n        }));\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { Service } from '../../data/service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n\n    constructor(private http: HttpClient) { }\n\n    // GET Services\n    getServices(): Observable<Service[]> {\n        const uri = 'http://localhost:3000/data/services';\n        return this\n            .http\n            .get<Service[]>(uri)\n            .pipe(map(res => {\n              return res;\n            }));\n    }\n\n    // GET Services\n    getService(id:any): Observable<Service> {\n        const uri = 'http://localhost:3000/data/services/get-one/' + id;\n        return this\n            .http\n            .get<Service>(uri)\n            .pipe(map(res => {\n              return res;\n            }));\n    }\n\n    getServicesLast(): Observable<Service[]> {\n        const uri = 'http://localhost:3000/data/services/last';\n        return this\n            .http\n            .get<Service[]>(uri)\n            .pipe(map(res => {\n              return res;\n            }));\n    }\n\n    // ADD Services\n    addService(heading, description, shortDescription, imageName, img): Observable<Service> {\n        const uri = 'http://localhost:3000/data/services/add';\n        const uri_img = 'http://localhost:3000/data/services/upload';\n        const headers = new HttpHeaders();\n        const obj = {\n            heading: heading,\n            description: description,\n            shortDescription: shortDescription,\n            imgUrl: imageName\n        };\n        this.http\n            .post(uri_img, img)\n            .subscribe(res =>\n                console.log(res));\n        return this.http\n            .post<Service>(uri, obj,{headers:headers})\n            .pipe(map(res => {\n              return res;\n            }))\n    }\n\n    // DELETE Services\n    delService(id:any) {\n        const uri = 'http://localhost:3000/data/services/delete/' + id;\n        return this\n            .http\n            .get(uri)\n            .pipe(map(res => {\n                return res;\n            }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { User } from '../../data/user';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private  isUserLoggedIn;\n  private username = '1';\n  private password = '1';\n\n  constructor() {\n    this.isUserLoggedIn = false;\n  }\n\n  setUserLoggedIn(login, pass) {\n      if (login === this.username && pass === this.password) {\n          this.isUserLoggedIn = true;\n          return this.getUserLoggedIn();\n      } else {\n          return this.getUserLoggedIn();\n      }\n  }\n\n  getUserLoggedIn() {\n      return this.isUserLoggedIn;\n  }\n\n    \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Article } from 'src/app/data/article';\nimport { ArticleService } from 'src/app/shared/service/atricle.service';\n\n@Component({\n  selector: 'app-articles',\n  templateUrl: './articles.component.html',\n  styleUrls: ['./articles.component.scss']\n})\nexport class ArticlesComponent implements OnInit {\n\narticles: Article[];\n\n  constructor(private service: ArticleService) { }\n\n  ngOnInit(): void {\n    this.getArticles();\n  }\n\n  getArticles(): void {\n    this.service.getArticles().subscribe(articles => {\n      this.articles = articles;\n    });\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-3 col-md-12 mt-2 mb-2\" *ngFor=\"let article of articles\">\n      <mdb-card>\n        <div class=\"view rgba-white-slight waves-light\" mdbWavesEffect>\n          <!-- Card img -->\n          <mdb-card-img src=\"{{article.urlImage}}\" alt=\"Card image cap\"></mdb-card-img> \n          <a>\n            <div class=\"mask\"></div>\n          </a>\n        </div>\n        <!--Card content-->\n        <mdb-card-body>\n          <!--Title-->\n          <mdb-card-title>\n            <h4>{{article.heading}}</h4>\n          </mdb-card-title>\n      \n          <!--Text-->\n          <mdb-card-text> \n            {{article.shortDescription}}\n          </mdb-card-text>\n      \n          <a href=\"#\" mdbBtn class=\"button\" routerLink=\"/articles/{{article._id}}\" mdbWavesEffect>Читать далее</a>\n        </mdb-card-body>\n      </mdb-card>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { ArticleService } from '../../../shared/service/atricle.service';\nimport { Article } from 'src/app/data/article';\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.scss']\n})\nexport class PageComponent implements OnInit {\n\n  article = new Article();\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: ArticleService,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.getArticle();\n  }\n\n  getArticle(): void {\n    this.service.getArticle(this.route.snapshot.paramMap.get('id')).subscribe(article => {\n      this.article = article;\n      console.dir(article)\n    })\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div class=\"img-container\">\n    <img src=\"{{article.urlImage}}\" alt=\"Snow\" class=\"full-screan\">\n    <!-- <div class=\"bottom-right\">\n        <button type=\"button\" (click)=\"goBack()\" mdbBtn class=\".z-depth-0 go-home\" mdbWavesEffect>Вернуться</button>\n    </div> -->\n    <div class=\"centered\">\n        <h2>{{article.heading}}</h2>\n        <p>{{article.shortDescription}}</p>\n    </div>\n</div>\n\n<div class=\"container article-wrap\">\n    <div class=\"row\">\n        <div class=\"col-12\" >\n            <div class=\"articleheading\">\n                <h2>{{article.heading}}</h2>\n                <span>{{article.date | date:'dd.MM.yy HH:mm'}}</span>\n            </div>\n            <div [froalaView]=\"article.description\"></div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { InvestorsService } from 'src/app/shared/service/investors.service';\nimport { Investor } from 'src/app/data/investor';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  investors: Investor[];\n  date = new Date();\n\n  constructor(private service: InvestorsService) { }\n\n  ngOnInit(): void {\n    this.getInvestors();\n  }\n\n  getInvestors(): void {\n    this.service.getInvestor().subscribe(\n      investors => this.investors = investors\n    );\n  }\n\n}\n","<!-- Footer -->\n<footer class=\"page-footer font-small grean pt-4\">\n\n  <!-- Footer Links -->\n  <div class=\"container text-center text-md-left\">\n\n    <!-- Grid row -->\n    <div class=\"row\">\n\n      <!-- Grid column -->\n      <div class=\"col-md-6 mt-md-0 mt-3\">\n\n        <!-- Content -->\n        <h5 class=\"text-uppercase\">Контакты</h5>\n        <span>\n          ул. Днепровской флотилии , 23 225710, г. Пинск, Брестской обл.\n        </span><br>\n        <span>\n          Тел. (0165) 31-31-60 моб. (29)532-08-05\n        </span><br>\n        <span>email: <a href = \"mailto: tppoless@gmail.com\">tppoless@gmail.com</a></span>\n\n      </div>\n      <!-- Grid column -->\n\n      <hr class=\"clearfix w-100 d-md-none pb-3\">\n\n      <!-- Grid column -->\n      <div class=\"col-md-3 mb-md-0 mb-3\">\n\n          <!-- Links -->\n          <h5 class=\"text-uppercase\"></h5>\n\n          <ul class=\"list-unstyled\">\n            <li>\n              Директор – Козырь Алексей Викторович +37529532085 <br>email: <a href = \"mailto: kozyr.a@polessu.by\">kozyr.a@polessu.by</a>\n            </li>\n          </ul>\n\n        </div>\n        <!-- Grid column -->\n\n        <!-- Grid column -->\n        <div class=\"col-md-3 mb-md-0 mb-3\">\n\n          <!-- Links -->\n          <h5 class=\"text-uppercase\"></h5>\n\n          <span>\n            IBAN BY75PJCB30125215211000000933<br> \n            ОАО «Приорбанк» BIC PJCBBY2X<br>\n            УНП 29098336, ОКПО 298654591000<br>\n            Субъект инновационной инфраструктуры научно-технологический парк «Полесье»<br> \n            ООО «Технопарк «Полесье»<br>\n          </span>\n\n        </div>\n        <!-- Grid column -->\n\n    </div>\n    <!-- Grid row -->\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <h5 class=\"text-uppercase\">Наши партнеры</h5>\n      </div>\n    </div>\n\n    <!-- Grid row -->\n\n    <div class=\"row\">\n      \n      <!--Grid column-->\n      <div class=\"col-lg-12 col-md-12 mb-4\">\n        <ul class=\"list-group list-group-horizontal-sm\">\n          <li *ngFor=\"let item of investors\" class=\"list-group-item center\">\n            <!--Image-->\n            <div class=\"view overlay z-depth-1-half\">\n              <img src=\"{{item.urlImage}}\" class=\"img-fluid\" alt=\"{{item.name}}\">\n              <a href=\"{{item.urlToInv}}\" target=\"_blank\">\n                <div class=\"mask rgba-white-light\" mdbWavesEffect></div>\n              </a>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <!--Grid column-->\n\n    </div>\n\n    <!-- Grid row -->\n\n  </div>\n  <!-- Footer Links -->\n\n  <!-- Copyright -->\n  <div class=\"footer-copyright text-center py-3\">© {{date.getFullYear()}} Copyright:\n    <a href=\"https://polessu.by/\"> Polessu.by</a>\n  </div>\n  <!-- Copyright -->\n\n</footer>\n<!-- Footer -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  home = 'Главная';\n  title = 'ПТП';\n\n  linkList = [\n    { name: 'Новости',            link: '/articles'     },\n    { name: 'Резидентам',         link: '/residents'    },\n    { name: 'Услуги',             link: '/services'     },\n    { name: 'Кластер',            link: '/klaster'      }\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--Navbar-->\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-light white pt-3 pb-3\" mdbStickyHeader>\n\n    <!-- Navbar brand -->\n    <mdb-navbar-brand><a class=\"navbar-brand font-weight-bold logo\" routerLink=\"/\" routerLinkActive=\"\"><img style=\"height: 40px;\" src=\"./assets/img/Logotype.png\" alt=\"LOGO\"></a></mdb-navbar-brand>\n\n    <!-- Collapsible content -->\n    <links>\n\n        <!-- Links -->\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\" routerLinkActive=\"active-navigate\" [routerLinkActiveOptions]=\"{exact: true}\" >\n                <a class=\"nav-link text-uppercase\" routerLink=\"\" >{{home}}</a>\n            </li>\n            <li class=\"nav-item\" *ngFor=\"let link of linkList\" routerLinkActive=\"active-navigate\">\n                <a class=\"nav-link text-uppercase\" routerLink=\"{{link.link}}\" >{{link.name}}</a>\n            </li>\n        </ul>\n        <!-- Links -->\n\n    </links>\n    <!-- Collapsible content -->\n\n</mdb-navbar>\n<!--/.Navbar-->","import { Component, OnInit } from '@angular/core';\nimport { Article } from 'src/app/data/article';\nimport { ArticleService } from 'src/app/shared/service/atricle.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  articles: Article[];\n\n  constructor(private service: ArticleService) { }\n\n  ngOnInit(): void {\n    this.getArticles();\n  }\n\n  getArticles(): void {\n    this.service.getArticlesLast().subscribe(articles => {\n      this.articles = articles;\n    });\n  }\n\n}\n","<!-- Carusel -->\n<mdb-carousel class=\"carousel slide carousel-fade\" [animation]=\"'fade'\">\n    <mdb-carousel-item *ngFor=\"let article of articles\">\n      <a routerLink=\"/articles/{{article._id}}\">\n        <div class=\"view w-100\">\n          <img class=\"d-block w-100 img-fluid full-screan\" src=\"{{article.urlImage}}\" alt=\"First slide\">\n          <div class=\"mask rgba-black-light waves-light\" mdbWavesEffect></div>\n        </div>\n      </a>\n      <div class=\"carousel-caption\">\n        <h3 class=\"h3-responsive\">{{article.heading}}</h3>\n        <p>{{article.shortDescription}}</p>\n      </div>\n    </mdb-carousel-item>\n  </mdb-carousel>\n\n<!-- Main content -->\n<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"col-lg-8 col-md-12 mt-2 plate\">\n          <h3 class=\"font-weight-bold\">О НАС</h3>\n          <p class=\"text-justify\">\n            Предметом деятельности общества с ограниченной ответственностью «Технопарк «Полесье» \n            является создание условий, благоприятных для организации и развития деятельности \n            инновационных предприятий, включая ускорение производственного освоения результатов \n            научно-исследовательских и опытно-конструкторских работ, изобретений и открытий, направленных \n            на развитие конкурентоспособных, экспортоориентированных и импортозамещающих технологий, \n            товаров, работ (услуг).\n          </p>\n          <p class=\"text-justify\">\n            Ключевым направлением деятельности технопарка является привлечение резидентов и обеспечение \n            в этой связи благоприятных условий для интенсивного формирования и развития в Республике Беларусь \n            сельского хозяйства и агробиотехнологической индустрии.\n          </p>\n        </div>\n        <div class=\"col-lg-4 col-md-12 mt-1 bg-plate plate\">\n          <h3 class=\"font-weight-bold\">ПОЧЕМУ МЫ?</h3>\n          <p>\n            Большой опыт создания и сопровождения сложных научно-технологических проектов. \n            Поможем разработать и внедрить современные технологии на Вашем предприятии\n          </p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 plate mb-3\">\n        <h3 class=\"font-weight-bold\">НАШИ ПЛАНЫ</h3>\n        <div class=\"row plate-plans mt-3\">\n          <div class=\"item col-md-12 col-lg-3\">\n            <div class=\"row\">\n              <div class=\"col-lg-12 col-2\">\n                <div class=\"icon\">\n                  <mdb-icon fas icon=\"chart-line\" size=\"3x\"></mdb-icon>\n                </div>\n              </div>\n              <div class=\"col-lg-12 col-10\">\n                <p>\n                  Привлечение малых инновационных предприятий, в том числе за счет \n                  проведения стартап-мероприятий\n                </p>\n              </div>\n            </div>\n          </div>\n          <div class=\"item col-md-12 col-lg-3\">\n            <div class=\"row\">\n              <div class=\"col-lg-12 col-2\">\n                <div class=\"icon\">\n                  <mdb-icon fas icon=\"chart-line\" size=\"3x\"></mdb-icon>\n                </div>\n              </div>\n              <div class=\"col-lg-12 col-10\">\n                <p>\n                  Расширение материально-технической базы технопарка для обеспечения развития резидентов, \n                  а также сотрудничества между малыми и крупными предприятиями\n                </p>\n              </div>\n            </div>\n          </div>\n          <div class=\"item col-md-12 col-lg-3\">\n            <div class=\"row\">\n              <div class=\"col-lg-12 col-2\">\n                <div class=\"icon\">\n                  <mdb-icon fas icon=\"chart-line\" size=\"3x\"></mdb-icon>\n                </div>\n              </div>\n              <div class=\"col-lg-12 col-10\">\n                <p>\n                  Создание условий и возможностей для коммерциализации проводимых \n                  в университете прикладных НИОКР и работ по подготовке производства\n                </p>\n              </div>\n            </div>\n          </div>\n          <div class=\"item col-md-12 col-lg-3\">\n            <div class=\"row\">\n              <div class=\"col-lg-12 col-2\">\n                <div class=\"icon\">\n                  <mdb-icon fas icon=\"chart-line\" size=\"3x\"></mdb-icon>\n                </div>\n              </div>\n              <div class=\"col-lg-12 col-10\">\n                <p>\n                  Налаживание связей с другими предприятиями, \n                  в том числе международными, в целях реализации совместных проектов\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Klaster } from '../../data/klaster';\nimport { KlasterService } from 'src/app/shared/service/klaster.service';\n\n@Component({\n  selector: 'app-klaster',\n  templateUrl: './klaster.component.html',\n  styleUrls: ['./klaster.component.scss']\n})\nexport class KlasterComponent implements OnInit {\n\n  klaster: Klaster;\n\n  constructor(private service: KlasterService) { }\n\n  ngOnInit(): void {\n    this.getKlaster();\n  }\n  \n  getKlaster() {\n    this.service.getKlaster().subscribe(\n      klaster => this.klaster = klaster,\n      error => console.dir(error));\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h3>{{klaster.name}}</h3>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <span>{{klaster.date | date:'dd.MM.yy HH:mm'}}</span>\n            <div [froalaView]=\"klaster.description\"></div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-residents',\n  templateUrl: './residents.component.html',\n  styleUrls: ['./residents.component.scss']\n})\nexport class ResidentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n\n    <div class=\"row\">\n        <div class=\"col-12 how-to\">\n            <h3 class=\"text-uppercase\">Как стать резидентом технопарка</h3>\n            <p>\n                В настоящее время общая площадь офисных помещений технопарка составляет 2400 квадратных метров. \n                Удобная планировка, общая компьютерная сеть, система кондиционирования, системы безопасности и контроля за доступом в помещения,\n                дифференцированный учет потребляемой электроэнергии, а также конференц-зал и комнаты переговоров обеспечат максимальный \n                уровень комфорта, высокую продуктивность Вашей работы. Всё это позволит снизить размер \n                финансовых затрат при создании и развитии инновационного бизнеса. \n                Кроме этого, технопарк может предоставить Вам в аренду мебель и компьютерную технику. \n                Сегодня стоимость арендной платы офисных помещений в технопарке составляет\n                от 9 руб. за 1 квадратный метр помещения в месяц.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12 privileges\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <h3 class=\"text-uppercase\">Льготы для резидентов Технопарка</h3>\n                </div>\n            </div>\n            <div class=\"row content\">\n                <div class=\"item col-sm-12 col-md-4\">\n                    <div class=\"icon\">\n                        <img src=\"../../../assets/for-residents/become-resident-tax-icon1.png\" alt=\"ico\">\n                    </div>\n                    <div class=\"text\">\n                        <span>Налог на прибыль 10 %</span>\n                    </div>\n                </div>\n                <div class=\"item col-sm-12 col-md-4\">\n                    <div class=\"icon\">\n                        <img src=\"../../../assets/for-residents/become-resident-tax-icon2.png\" alt=\"ico\">\n                    </div>\n                    <div class=\"text\">\n                        <span>Низкая арендная ставка на помещения</span>\n                    </div>\n                </div>\n                <div class=\"item col-sm-12 col-md-4\">\n                    <div class=\"icon\">\n                        <img src=\"../../../assets/for-residents/become-resident-tax-icon3.png\" alt=\"ico\">\n                    </div>\n                    <div class=\"text\">\n                        <span>Скидки на нучно-техническое сопровождение и консалтинговые услуги для вашего бизнеса</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12 requirements\">\n            <h3 class=\"text-uppercase\">ТРЕБОВАНИЯ К РЕЗИДЕНТАМ ТЕХНОПАРКА</h3>\n            <div class=\"row content\">\n                <div class=\"col-12\">\n                    <mdb-icon fas icon=\"check\" class=\"icon\"></mdb-icon> <span>осуществление инновационной деятельности</span>\n                </div>\n                <div class=\"col-12\">\n                    <mdb-icon fas icon=\"check\" class=\"icon\"></mdb-icon> <span>наличие статуса юридического лица или индивидуального предпринимателя</span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12 join\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <h3 class=\"text-uppercase\">Процедура регистрации в качестве резидента Технопарка</h3>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <!-- Vertical Steppers -->\n                    \n                        <!-- Stepers Wrapper -->\n                        <ul class=\"stepper stepper-vertical\">\n                    \n                            <!-- First Step -->\n                            <li>\n                            <a>\n                                <span class=\"circle\">1</span>\n                                <span class=\"label\">Бизнес-идея</span>\n                            </a>\n\n                            <div class=\"step-content grey lighten-3 w-100\">\n                                <p>Предварительное обсуждение бизнес-идеи заявителя на основании предоставленных им данных</p>\n                            </div>\n                            </li>\n                    \n                            <!-- Second Step -->\n                            <li>\n                    \n                            <!--Section Title -->\n                            <a>\n                                <span class=\"circle\">2</span>\n                                <span class=\"label\">Комплект документов</span>\n                            </a>\n                    \n                            <!-- Section Description -->\n                            <div class=\"step-content grey lighten-3 w-100\">\n                                <p>Подготовка и представление в Технопарк комплекта документов</p>\n                            </div>\n                            </li>\n                    \n                            <!-- Third Step -->\n                            <li>\n                            <a>\n                                <span class=\"circle\">3</span>\n                                <span class=\"label\">Регистрация заявителя</span>\n                            </a>\n\n                            <div class=\"step-content grey lighten-3 w-100\">\n                                <p>Рассмотрение на Совете Технопарка вопроса о регистрации заявителя в качестве резидента</p>\n                            </div>\n                            </li>\n                    \n                            <!-- Fourth Step -->\n                            <li>\n                            <a>\n                                <span class=\"circle\">4</span>\n                                <span class=\"label\">Присвоение статуса</span>\n                            </a>\n\n                            <div class=\"step-content grey lighten-3 w-100\">\n                                <p>Присвоение статуса резидента Технопарка, подписание договора аренды помещений и договора на осуществление инновационной деятельности</p>\n                            </div>\n                            </li>\n                    \n                        </ul>\n                        <!-- /.Stepers Wrapper -->\n                    \n                        </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12 files\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <h3 class=\"text-uppercase\">Документы для скачивания</h3>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-md-3 col-sm-12\">\n                    <a href=\"http://localhost:3000/uploads/docs/anketa.pdf\">\n                        <div class=\"icon\">\n                            <mdb-icon far icon=\"file-pdf\" size=\"2x\"></mdb-icon>\n                        </div>\n                        <span class=\"align-middle\">АНКЕТА РЕЗИДЕНТА</span>\n                    </a>\n                </div>\n                <div class=\"col-md-3 col-sm-12\">\n                    <a href=\"http://localhost:3000/uploads/docs/zayavlenie.pdf\">\n                        <div class=\"icon\">\n                            <mdb-icon far icon=\"file-pdf\" size=\"2x\"></mdb-icon>\n                        </div>\n                        <span class=\"align-middle\">ЗАЯВЛЕНИЕ (ФОРМА)</span>\n                    </a>\n                </div>\n                <div class=\"col-md-3 col-sm-12\">\n                    <a href=\"http://localhost:3000/uploads/docs/polojenie_o_sovete.pdf\">\n                        <div class=\"icon\">\n                            <mdb-icon far icon=\"file-pdf\" size=\"2x\"></mdb-icon>\n                        </div>\n                        <span class=\"align-middle\">ПОЛОЖЕНИЕ О СОВЕТЕ ТЕХНОПАРКА</span>\n                    </a>\n                </div>\n                <div class=\"col-md-3 col-sm-12\">\n                    <a href=\"http://localhost:3000/uploads/docs/reglament.pdf\">\n                        <div class=\"icon\">\n                            <mdb-icon far icon=\"file-pdf\" size=\"2x\"></mdb-icon>\n                        </div>\n                        <span class=\"align-middle\">РЕГЛАМЕНТ РАБОТЫ С РЕЗИДЕНТАМИ</span>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { ServicesService } from 'src/app/shared/service/services.service';\nimport { Service } from '../../../data/service';\n\n@Component({\n  selector: 'app-service-page',\n  templateUrl: './service-page.component.html',\n  styleUrls: ['./service-page.component.scss']\n})\nexport class ServicePageComponent implements OnInit {\n\n  services = new Service();\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: ServicesService,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.getService();\n  }\n\n  getService(): void {\n    this.service.getService(this.route.snapshot.paramMap.get('id')).subscribe(service => {\n      this.services = service;\n      console.dir(service)\n    })\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h3>{{services.heading}}</h3>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div [froalaView]=\"services.description\"></div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Service } from 'src/app/data/service';\nimport { ServicesService } from 'src/app/shared/service/services.service';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.scss']\n})\nexport class ServicesComponent implements OnInit {\n\n  services: Service[];\n\n  constructor(private service: ServicesService) { }\n\n  ngOnInit(): void {\n    this.getArticles();\n  }\n\n  getArticles(): void {\n    this.service.getServices().subscribe(services => {\n      this.services = services;\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div *ngFor=\"let item of services\" class=\"col-sm-12 col-lg-3\">\n            <mdb-card>\n                <div class=\"view rgba-white-slight waves-light\" mdbWavesEffect>\n                  <!-- Card img -->\n                  <mdb-card-img src=\"{{item.imgUrl}}\" alt=\"Card image cap\"></mdb-card-img> \n                  <a>\n                    <div class=\"mask\"></div>\n                  </a>\n                </div>\n                <!--Card content-->\n                <mdb-card-body>\n                  <!--Title-->\n                  <mdb-card-title>\n                    <h4>{{item.heading}}</h4>\n                  </mdb-card-title>\n              \n                  <!--Text-->\n                  <mdb-card-text> \n                    {{item.shortDescription}}\n                  </mdb-card-text>\n              \n                  <a href=\"#\" mdbBtn class=\"button\" routerLink=\"/services/{{item._id}}\" mdbWavesEffect>Читать далее</a>\n                </mdb-card-body>\n              </mdb-card>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-web',\n  templateUrl: './web.component.html',\n  styleUrls: ['./web.component.scss']\n})\nexport class WebComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Header -->\n<app-header></app-header>\n\n<!-- Main content -->\n<div class=\"content\">\n    <div class=\"margin-82\"></div>\n    <router-outlet></router-outlet>\n</div>\n\n<!-- Footer -->\n<app-footer></app-footer>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}